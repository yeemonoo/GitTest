from sklearn import datasets
[attr for attr in dir(datasets) if not attr.startswith('_')]
boston = datasets.load_boston()
print(boston.DESCR)
boston_df = pd.DataFrame(boston.data, columns=boston.feature_names)
boston_df.head()
X = boston.data
y = boston.target

from sklearn.metrics import explained_variance_score
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import r2_score

from sklearn.model_selection import cross_val_predict

from sklearn.neighbors import KNeighborsRegressor
from sklearn.linear_model import LinearRegression, RANSACRegressor
from sklearn.gaussian_process import GaussianProcessRegressor
from sklearn.svm import SVR
from sklearn.svm import LinearSVR

regressors = [
    LinearRegression(), 
    RANSACRegressor(), 
    GaussianProcessRegressor(),
    KNeighborsRegressor(n_neighbors=9, metric='manhattan'),
    SVR(),
    LinearSVR(),
    SVR(kernel='linear') # Cf. LinearSVR: much slower, might be better or worse: 
]

for model in regressors:
    predictions = cross_val_predict(model, X, y, cv=10)
    print(model)
    print("\tExplained variance:", explained_variance_score(y, predictions))
    print("\tMean absolute error:", mean_absolute_error(y, predictions))
    print("\tR2 score:", r2_score(y, predictions))